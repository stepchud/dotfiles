= Dot Files

These are config files to set up a system the way I like it.
Originally from Ryan Bates' git://github.com/ryanb/dotfiles but adapted to my preferences.


== Installation

  git clone git://github.com/stepchud/dotfiles ~/dotfiles
  cd ~/dotfiles
  rake install


== Environment

This will run on posix-type system that supports general commands like mv, ln.
Running `rake install` will also clone a seperate git repo called localized.
This will allow you to have environment/os specific config alongside these general settings.
You will be prompted to switch to a system-specific branch in that repo during the install process.

== Features

I normally place all of my coding projects in ~/code, so this directory
can easily be accessed (and tab completed) with the "c" command.

  c railsca<tab>

Tab completion is also added to rake and cap commands:

  rake db:mi<tab>
  cap de<tab>

To speed things up, the results are cached in local .rake_tasks~ and
.cap_tasks~. It is smart enough to expire the cache automatically in
most cases, but you can simply remove the files to flush the cache.

There are a few key bindings set. Many of these require option to be
set as the meta key. Option-left/right arrow will move cursor by word,
and control-left/right will move to beginning and end of line.
Control-option-N will open a new tab with the current directory under
Mac OS X Terminal.

If you're using git, you'll notice the current branch name shows up in
the prompt while in a git repository.

If you're using Rails, you'll find some handy aliases (below). You can
also use show_log and hide_log in script/console to show the log inline.

  ss       # script/server
  sc       # script/console
  sg       # script/generate
  tlog     # tail -f log/development.log
  rst      # touch tmp/restart.txt
  migrate  # rake db:migrate db:test:clone

There are several features enabled in Ruby's irb including history and
completion. Many convenience methods are added as well such as "ri"
which can be used to get inline documentation in IRB. See irbrc and
railsrc files for details.

There are some vim plugins and configurations included as well. See vimrc for this config.
